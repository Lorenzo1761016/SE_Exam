import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;


public class Main
{
    public static void main(final String[] args) throws ClassNotFoundException, SQLException {
        Class.forName("org.sqlite.JDBC");
        final Connection conn = DriverManager.getConnection("jdbc:sqlite:" + args[0]);
        final Statement stat = conn.createStatement();
        if (args[1].equals("create")) {
            stat.executeUpdate("drop table if exists vaccinations;");
            stat.executeUpdate("drop table if exists persons");
            stat.executeUpdate("create table vaccinations (id, person, date, type);");
            stat.executeUpdate("create table persons (id, name, surname, birthdate, address);");
            PreparedStatement prep = conn.prepareStatement("insert into vaccinations values (?, ?, ?, ?);");
            prep.setString(1, "VAC_ID_0");
            prep.setString(2, "00000000");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Moderna");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_1");
            prep.setString(2, "00000001");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Pfizer");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_2");
            prep.setString(2, "00000010");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "J&J");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_3");
            prep.setString(2, "00000011");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Moderna");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_4");
            prep.setString(2, "00000100");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Pfizer");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_5");
            prep.setString(2, "00000101");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Astrazeneca");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_6");
            prep.setString(2, "00000110");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Moderna");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_7");
            prep.setString(2, "00000111");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Pfizer");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_8");
            prep.setString(2, "00001000");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "J&J");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "VAC_ID_9");
            prep.setString(2, "00001001");
            prep.setString(3, "05/10/2021");
            prep.setString(4, "Astrazeneca");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep = conn.prepareStatement("insert into persons values (?, ?, ?, ?, ?);");
            prep.setString(1, "00000000");
            prep.setString(2, "Giorgio");
            prep.setString(3, "Napolitano");
            prep.setString(4, "01/01/1918");
            prep.setString(5, "Via della Scrofa 12");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000001");
            prep.setString(2, "Daniele");
            prep.setString(3, "Michelori");
            prep.setString(4, "25/04/1997");
            prep.setString(5, "Via Genzano 99");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000010");
            prep.setString(2, "Fabrizio");
            prep.setString(3, "D'amore");
            prep.setString(4, "13/02/1965");
            prep.setString(5, "Piazza Euclide 76");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000011");
            prep.setString(2, "Damiano");
            prep.setString(3, "Er Faina");
            prep.setString(4, "23/05/1983");
            prep.setString(5, "Via della Magliana 5");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000100");
            prep.setString(2, "Luca");
            prep.setString(3, "Ravenna");
            prep.setString(4, "19/06/1986");
            prep.setString(5, "Viale Gottardo 2");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000101");
            prep.setString(2, "Ilaria");
            prep.setString(3, "Ponzianelli");
            prep.setString(4, "28/07/1997");
            prep.setString(5, "Via Talenti 1144");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000110");
            prep.setString(2, "Gianmarco");
            prep.setString(3, "Salvi");
            prep.setString(4, "10/10/1997");
            prep.setString(5, "Piazza filattiera 12");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00000111");
            prep.setString(2, "Elisabetta");
            prep.setString(3, "Canalis");
            prep.setString(4, "12/09/1972");
            prep.setString(5, "Via del Corso 113");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00001000");
            prep.setString(2, "Belen");
            prep.setString(3, "Rodriguez");
            prep.setString(4, "01/06/1980");
            prep.setString(5, "Piazza Sempione 19");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            prep.setString(1, "00001001");
            prep.setString(2, "Samuele");
            prep.setString(3, "Olivieri Pennesi");
            prep.setString(4, "20/06/1997");
            prep.setString(5, "Via Ottaviano 57");
            prep.addBatch();
            conn.setAutoCommit(false);
            prep.executeBatch();
            conn.setAutoCommit(true);
            System.out.print("Database filled with vaccinations and persons.");
        }
        else if (args[1].equals("all")) {
            ResultSet rs = stat.executeQuery("select * from vaccinations");
            while (rs.next()) {
                System.out.print("VaccinationID = " + rs.getString("id") + " | ");
                System.out.print("PersonID = " + rs.getString("person") + " | ");
                System.out.print("Date = " + rs.getString("date") + " | ");
                System.out.println("Type = " + rs.getString("type"));
            }
            rs = stat.executeQuery("select * from persons");
            while (rs.next()) {
                System.out.print("PersonID = " + rs.getString("id") + " | ");
                System.out.print("Name = " + rs.getString("name") + " | ");
                System.out.print("Surname = " + rs.getString("surname") + " | ");
                System.out.print("Date of birth = " + rs.getString("birthdate") + " | ");
                System.out.println("Address = " + rs.getString("address"));
            }
            rs.close();
        }
        conn.close();
    }
}